{"version":3,"sources":["logo.svg","error.png","components/Header/Header.js","services/instaService.js","components/Feed/Posts/Post/User/User.js","components/Feed/Posts/Error.js","components/Feed/Posts/Posts.js","components/Feed/Users/Users.js","components/Feed/Feed.js","components/Profile/Palette/Palette.js","components/Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Feed","className","to","src","logo","instaService","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllPosts","getAllPhotos","map","_transformPost","post","alt","this","User","props","min","name","href","ErrorMessage","img","Posts","InstaService","state","posts","error","onPostsLoaded","console","log","setState","onError","err","updatePosts","then","catch","arr","item","altname","photo","descr","id","key","items","renderItems","Component","Users","Palette","photos","onPhotosLoaded","updatePhotos","Profile","App","Header","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ce89321.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9e8a2b39.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.3b8ad90a.png\";","import React, {Component} from 'react';\r\nimport logo from '../../logo.svg'\r\nimport {Link} from 'react-router-dom'\r\n\r\nlet Feed = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"container h-flex\">\r\n                <Link to='/' className=\"logo\">\r\n                    <img src={logo}></img>\r\n                </Link>\r\n                <nav className=\"links\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link to='/' className=\"menu__links\">Лента</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/profile/' className=\"menu__links\">Профиль</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Feed","export default class instaService {\r\n    constructor(){\r\n        this._apiBase = 'http://localhost:3000';\r\n    }\r\n\r\n    getResource = async (url) =>{\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if(!res.ok){\r\n            throw new Error(`Could not fetch ${url}; received ${res.status}`)\r\n        }\r\n\r\n        return await res.json(); // there are a few methods, like .text(), .blob() \r\n    }\r\n\r\n    getAllPosts = async () => {\r\n        const res = await this.getResource('/posts/');\r\n        return res;\r\n    }\r\n\r\n    getAllPhotos = async () =>{\r\n        const res = await this.getAllPosts('/')\r\n        return res.map(this._transformPost)\r\n    }\r\n\r\n    _transformPost = post => {\r\n        return {\r\n            src: post.src,\r\n            alt: post.alt\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\n\r\nlet User = props => {\r\n    const {min, src, alt, name} = props;\r\n    return (\r\n        <a href=\"#\" className={min ? \"user min\" : \"user\"}>\r\n            <img src={src} alt={alt}></img>\r\n            <div>{name}</div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport img from '../../../error.png';\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <>\r\n            <img src={img} alt=\"error\"></img>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React, {Component} from 'react';\r\nimport InstaService from '../../../services/instaService'\r\nimport User from './Post/User/User';\r\nimport ErrorMessage from './Error'\r\n\r\nclass Posts extends Component{\r\n    InstaService = new InstaService();\r\n    state = {\r\n        posts: [],\r\n        error: false,\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updatePosts()\r\n    }\r\n\r\n    updatePosts() {\r\n        this.InstaService.getAllPosts()\r\n        .then(this.onPostsLoaded)\r\n        .catch(this.onError);\r\n    }\r\n\r\n    onPostsLoaded = posts => {\r\n        console.log(posts)\r\n        this.setState({\r\n            posts,\r\n            error: false\r\n        })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    renderItems(arr){\r\n        return arr.map(item => {\r\n            const {name, altname, photo, src, alt, descr, id} = item;\r\n\r\n            return(\r\n                <div key={id} className=\"post\">\r\n                <User src={photo}\r\n                      alt={altname}\r\n                      name={name}\r\n                      min=\"true\"\r\n                />\r\n                <img src={src} alt={alt}/>\r\n                <div className=\"post__name\">\r\n                    {name}\r\n                </div>\r\n                <div className=\"post__descr\">\r\n                    {descr}\r\n                </div>\r\n            </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        const {error, posts} = this.state;\r\n        if(error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const items = this.renderItems(posts)\r\n        return(\r\n            \r\n            <div className=\"left\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posts\r\n\r\n{/* <div className=\"left\">\r\n<Post src=\"https://fullpicture.ru/wp-content/uploads/2016/12/year-in-instagram-201613.jpg\" alt=\"inst\"/>\r\n<Post src=\"https://s.zefirka.net/images/2017-05-29/krasivye-gorodskie-pejzazhi-iz-instagram-vincent-cogliandro/krasivye-gorodskie-pejzazhi-iz-instagram-vincent-cogliandro-13.jpg\" alt=\"inst\"/>\r\n</div> */}","import React, {Component} from 'react';\r\nimport User from '../Posts/Post/User/User'\r\n\r\nlet Users = () => {\r\n    return (\r\n        <div className=\"right\">\r\n            <User src=\"https://66.media.tumblr.com/27b28cbb9c8a820342ea194465220dac/tumblr_o00blkVLaU1uonfnzo1_1280.jpg\"\r\n                      alt=\"profile__photo\"\r\n                      name=\"Randoman Intrnatov\"\r\n                />\r\n\r\n            <div className=\"users__block\">\r\n                <User src=\"https://66.media.tumblr.com/27b28cbb9c8a820342ea194465220dac/tumblr_o00blkVLaU1uonfnzo1_1280.jpg\"\r\n                      alt=\"profile__photo\"\r\n                      name=\"Randoman Intrnatov\"\r\n                      min=\"true\"\r\n                />\r\n                <User src=\"https://66.media.tumblr.com/27b28cbb9c8a820342ea194465220dac/tumblr_o00blkVLaU1uonfnzo1_1280.jpg\"\r\n                      alt=\"profile__photo\"\r\n                      name=\"Randoman Intrnatov\"\r\n                      min=\"true\"\r\n                />\r\n                <User src=\"https://66.media.tumblr.com/27b28cbb9c8a820342ea194465220dac/tumblr_o00blkVLaU1uonfnzo1_1280.jpg\"\r\n                      alt=\"profile__photo\"\r\n                      name=\"Randoman Intrnatov\"\r\n                      min=\"true\"\r\n                />\r\n                <User src=\"https://66.media.tumblr.com/27b28cbb9c8a820342ea194465220dac/tumblr_o00blkVLaU1uonfnzo1_1280.jpg\"\r\n                      alt=\"profile__photo\"\r\n                      name=\"Randoman Intrnatov\"\r\n                      min=\"true\"\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react';\r\nimport Posts from './Posts/Posts'\r\nimport Users from './Users/Users'\r\n\r\nlet Feed = () => {\r\n    return (\r\n        <div className=\"container feed\">\r\n            <Posts/>\r\n            <Users/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","import React, {Component} from 'react';\r\nimport InstaService from '../../../services/instaService'\r\nimport ErrorMessage from '../../Feed/Posts/Error';\r\n\r\nclass Palette extends Component {\r\n    InstaService = new InstaService()\r\n    state = {\r\n        error: false,\r\n        photos: [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updatePhotos()\r\n    }\r\n\r\n    updatePhotos(){\r\n        this.InstaService.getAllPhotos()\r\n            .then(this.onPhotosLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onPhotosLoaded = (photos) =>{\r\n        this.setState({\r\n            error: false,\r\n            photos\r\n        })\r\n    }\r\n\r\n    renderItems(arr){\r\n        return arr.map(item => {\r\n            const {src,alt} = item\r\n            return (\r\n                <img src={src} alt={alt}></img>\r\n            )\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {error, photos} = this.state;\r\n\r\n        if(error) return <ErrorMessage/>\r\n\r\n        const items = this.renderItems(photos)\r\n\r\n        return (\r\n            <div className=\"palette\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Palette","import React from 'react';\r\nimport User from '../Feed/Posts/Post/User/User';\r\nimport Palette from './Palette/Palette'\r\n\r\n\r\nlet Profile = () => {\r\n    return (\r\n        <div className=\"container profile\">\r\n            <User src=\"https://66.media.tumblr.com/27b28cbb9c8a820342ea194465220dac/tumblr_o00blkVLaU1uonfnzo1_1280.jpg\"\r\n                      alt=\"profile__photo\"\r\n                      name=\"Randoman Intrnatov\"\r\n            />\r\n            <Palette />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\nimport logo from './logo.svg';\nimport Header from './components/Header/Header';\nimport Feed from './components/Feed/Feed';\nimport Profile from './components/Profile/Profile';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Route path='/' component={Feed} exact/>\n        <Route path='/profile' component={Profile} exact/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}